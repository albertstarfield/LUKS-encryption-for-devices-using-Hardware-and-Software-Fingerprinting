#!/bin/bash
if [ ! -f /tmp/keyHash ]; then
echo "hash trust key has been expired, please reboot to renew the system state and the key"
exit
fi
reset
echo "Please prepare your backup keys and reenter it on the next prompt"
echo "It is required to unlock the disk first then we able to add the hash trust key"
cd /encryptStorageTrustTool
for configuration in $(ls $(pwd)/diskConfig); do
. $(pwd)/diskConfig/${configuration}
echo "Loading configuration from ${configuration}"
echo "for Disk or Partition ${diskUUID}"
#echo "$(cat /tmp/keyHash)" | cryptsetup luksAddKey /dev/disk/by-uuid/${diskUUID} -
#https://unix.stackexchange.com/questions/225108/how-to-automate-cryptsetup-luksaddkey-with-passphrase
# cryptstup luksAddKey /dev/disk/by-uuid/${diskUUID} newkey < backupkey
#echo -n "Disk Data Password for ${diskUUID} : " 
#read -s backupPasswordInput
#echo "Loading..."
set -e
#cryptsetup luksAddKey /dev/disk/by-uuid/${diskUUID} "$(cat /tmp/keyHash)" < ${backupPasswordInput}
cryptsetup luksDump /dev/disk/by-uuid/${diskUUID}
echo "for Disk or Partition ${diskUUID}"
echo "name : ${sessionName}"
cryptsetup luksAddKey /dev/disk/by-uuid/${diskUUID} /tmp/keyHash
#cryptsetup -v luksKillSlot /dev/nvme0n1p4 8  this is how you remove keySlot
echo "Adding trust keyHash"
done
echo "If everything goes pretty well then you can reboot"
exit



















oldlegacycode(){
echo -n Disk Data Password : 
if [ -z "${1}" ]; then
read -s password
else
echo "External invocation detected!"
export password="${1}"
fi
echo
touch passwordhash.gpg keychain.gpg
echo "recalling the key fingerprinting daemon"
bash hwswhashd
#=====================
#[diskencryption]
echo $password > passwordhash 
gpg --batch --yes --passphrase "$(cat /tmp/hwhash)" -c passwordhash
echo "Okay you should able to boot up and mount the drive now"
rm passwordhash
#=====================
#[keychain]
echo "keychainID=$(uuidgen)" > keychain
gpg --batch --yes --passphrase "$(cat /tmp/hwhash)" -c keychain
rm keychain
#=====================

echo "Migrating new configuration into the rw storage!"
mount -o remount,rw /media/root-ro
cp -ruav /encryptStorageTrustTool/* /media/root-ro/encryptStorageTrustTool
mount -o remount,ro /media/root-ro
}
